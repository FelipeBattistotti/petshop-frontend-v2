//import Head from 'next/head'
//import Image from 'next/image'
//import styles from '../styles/Home.module.css'

// export default function Home() {
//   return (
//     <div className={styles.container}>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>

//       <main className={styles.main}>
//         <h1 className={styles.title}>
//           Welcome to <a href="https://nextjs.org">Next.js!</a>
//         </h1>

//         <p className={styles.description}>
//           Get started by editing{' '}
//           <code className={styles.code}>pages/index.js</code>
//         </p>

//         <div className={styles.grid}>
//           <a href="https://nextjs.org/docs" className={styles.card}>
//             <h2>Documentation &rarr;</h2>
//             <p>Find in-depth information about Next.js features and API.</p>
//           </a>

//           <a href="https://nextjs.org/learn" className={styles.card}>
//             <h2>Learn &rarr;</h2>
//             <p>Learn about Next.js in an interactive course with quizzes!</p>
//           </a>

//           <a
//             href="https://github.com/vercel/next.js/tree/master/examples"
//             className={styles.card}
//           >
//             <h2>Examples &rarr;</h2>
//             <p>Discover and deploy boilerplate example Next.js projects.</p>
//           </a>

//           <a
//             href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//           >
//             <h2>Deploy &rarr;</h2>
//             <p>
//               Instantly deploy your Next.js site to a public URL with Vercel.
//             </p>
//           </a>
//         </div>
//       </main>

//       <footer className={styles.footer}>
//         <a
//           href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//           target="_blank"
//           rel="noopener noreferrer"
//         >
//           Powered by{' '}
//           <span className={styles.logo}>
//             <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
//           </span>
//         </a>
//       </footer>
//     </div>
//   )
// }






import React, {useState} from 'react';

import Link from 'next/link';
import Image from 'next/image'
import { useRouter } from "next/router";

//import { Link, useHistory } from 'react-router-dom';
import { useToasts } from 'react-toast-notifications';
import { FiPlusCircle } from 'react-icons/fi';

import api from '../services/api';

//import './styles.css';

//import loginLogoImg from '../../assets/login_logo.svg';

export default function Login() {
    const [email, setEmail] = useState('');
    const [pwd, setPWD] = useState('');
    //const history = useHistory();
    const router = useRouter();

    const { addToast } = useToasts();

    async function handleLogin (e: { preventDefault: () => void; }) {
        e.preventDefault();

        try {
            const response = await api.post('login', { email, pwd }); // makes the session request

            localStorage.setItem('userId', response.data.id);

            router.push('/Products'); // navigates to the Products route
            //history.push('/products'); // navigates to the Products route
        } catch (err) {
            addToast('Falha no login, tente novamente.', { appearance: 'info' });
        }
    }

    return (
        <div className="logon-container">
            <section className="form">
                <Image  src="/login_logo.svg" alt="loginLogo" width={72} height={16} />
                {/* <Image  src="/login_logo.svg" alt="loginLogo" className="img" /> */}
                {/* <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} /> */}
                <form onSubmit={handleLogin}>
                    <input 
                        placeholder="E-mail"
                        value={email}
                        autoFocus={true}
                        onChange={e => setEmail(e.target.value)}
                    />
                    <input 
                        placeholder="Senha"
                        value={pwd}
                        type="password"
                        onChange={e => setPWD(e.target.value)}
                    />
                    <button id="loginButton" className="button" type="submit">Entrar</button>

                    {/* <Link className="link-register" to="/register"> */}
                    <Link href="/Register" passHref>
                        <>
                          <FiPlusCircle size={20} color="#E84143" />
                          Cadastrar-se
                        </>
                    </Link>
                </form>
            </section>
        </div>
    );
}
